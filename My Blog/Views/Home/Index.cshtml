@using My_Blog.Models
@model Users

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <h3 class="display-4">Sign Up</h3>
</div>

<div class="card">
    <form class="p-3" action="/Home/SignUp" method="post" onsubmit="event.preventDefault(); validateForm();" id="form">
        <div class="form-group">
            <label for="usr">Name:</label>
            <input type="text" class="form-control" id="name" asp-for="Name">
            <span class="text-danger" id="errName"></span>
        </div>
        <div class="form-group">
            <label for="pwd">Username:</label>
            <input type="text" class="form-control" id="usr" asp-for="Username">
            <span class="text-danger" id="errUsr"></span>

        </div>
        <div class="form-group">
            <label for="usr">Email:</label>
            <input type="email" class="form-control" id="email" asp-for="Email">
            <span class="text-danger" id="errEmail"></span>

        </div>
        <div class="form-group">
            <label for="pwd">Password:</label>
            <input type="password" class="form-control" id="pwd" asp-for="Password">
            <span class="text-danger" id="errPass"></span>

        </div>
        <div class="form-group">
            <label for="pwd">Confirm Password:</label>
            <input type="password" class="form-control" id="conpwd">
        </div>
        <div class="form-group">
            <label for="sel1">Gender:</label>
            <select class="form-control" id="sel1" asp-for="Gender">
                <option>Male</option>
                <option>Female</option>
               
            </select>
        </div>
        <button class="btn btn-outline-dark " type="submit">Sign Up</button>
    </form>
    <a class="p-3" href="/Home/SignIn">Have an account? Sign in instead</a>

</div>

<script>
    function validateForm() {
        if (document.getElementById("name").value === "") {
            document.getElementById("errName").innerHTML = "Name can't be empty"; return;
        }
        if (document.getElementById("usr").value === "") {
            document.getElementById("errUsr").innerHTML = "Username can't be empty"; return;
        }
        if (document.getElementById("email").value === "") {
            document.getElementById("errEmail").innerHTML = "Email can't be empty"; return;
        }
        if (! validateEmail( document.getElementById("email").value )) {
            document.getElementById("errEmail").innerHTML = "Email format isn't correct"; return;
        }
        if (document.getElementById("pwd").value === "" || document.getElementById("pwd").value !== document.getElementById("conpwd").value) {
            document.getElementById("errPass").innerHTML = "Passwords Donot Match"; return;
        }
        document.getElementById("form").submit();
    }
    function validateEmail(email) {
        const re = /^(([^<>()[\]\\.,;:\s@@"]+(\.[^<>()[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
    }
</script>